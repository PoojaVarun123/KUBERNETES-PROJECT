PLUGINS/ADDONS/CONTROLLER
Amazon CNI plugin
Kube-proxy
Core-DNS
Amazon Application Load Balancer
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
AWS DEFAULT PODS
aws-node-cjfjn                   2/2     Running   0          17h
coredns-5d5f56f475-gn7wq         1/1     Running   0          17h
kube-proxy-hvbcd                 1/1     Running   0          17h
metrics-server-c99d46c74-xzctw   1/1     Running   0          17h
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EKS DEFAULT NAMESPACE
default           Active   17h
kube-node-lease   Active   17h
kube-public       Active   17h
kube-system       Active   17h
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
kubectl get nodes -o wide
NAME                                            STATUS   ROLES    AGE   VERSION                INTERNAL-IP      EXTERNAL-IP      OS-IMAGE         KERNEL-VERSION                  CONTAINER-RUNTIME
ip-192-168-49-145.ap-south-1.compute.internal   Ready    <none>   17h   v1.29.15-eks-473151a   192.168.49.145   13.126.152.167   Amazon Linux 2   5.10.237-230.949.amzn2.x86_64   containerd://1.7.27
ip-192-168-6-87.ap-south-1.compute.internal     Ready    <none>   17h   v1.29.15-eks-473151a   192.168.6.87     13.201.5.58      Amazon Linux 2   5.10.237-230.949.amzn2.x86_64   containerd://1.7.27
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
aws sts get-caller-identity
{
    "UserId": "881356888890",
    "Account": "881356888890",
    "Arn": "arn:aws:iam::881356888890:root"
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
aws eks --region eu-west-1 update-kubeconfig --name tws-eks-cluster
------------------------------------------------------------------------------------------------------------
We have to check whether OIDC provider is associated with EKScluster
Create AWSLoadBalancerControllerPolicy
Create IRSA > IAM trust policy role and Service account
Install CRDs for TargetGroupBinding
add Helm repo > Install Controller with Helm 

